on:
  workflow_dispatch:

permissions:
  contents: read
  issues: read
  pull-requests: read

jobs:
  job1:
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-24.04-arm # public preview
        - ubuntu-22.04-arm # public preview
        - ubuntu-latest # eventually will pick up the next version and test it
        - ubuntu-24.04 # ubuntu-latest
        - ubuntu-22.04
        - ubuntu-20.04
        - macos-latest # eventually will pick up the next version and test it
        - macos-15 # public preview
        - macos-14 # macos-latest
        - macos-13
        #- windows-2025 # public preview
        #- windows-2022 # windows-latest
        #- windows-2019

    runs-on: ${{ matrix.os }}
    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@graphql
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # test github-script CA
      - name: github-script
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.issues.listLabelsOnIssue({
              issue_number: 2,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

      # test gh CA
      - name: gh api
        env:
            GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}/issues/1/labels

      # test curl CA
      - name: curl
        run: |
          curl \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ github.token }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://Api.github.com/repos/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}/labels
      
      # test graphql api
      - name: graphql
        uses: octokit/graphql-action@v2.x
        with:
          query: |
            query release($owner:String!,$repo:String!) {
              repository(owner:$owner,name:$repo) {
                releases(first:1) {
                  nodes {
                    name
                    createdAt
                    tagName
                    description
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}